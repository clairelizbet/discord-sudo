name: Build and publish release
on:
  push:
    tags:
      - 'v?[0-9].[0-9].[0-9]'

env:
  tag: ${{ github.ref_name }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - run: export ghdir=${GITHUB_WORKSPACE}/.github
      - run: export tagversion=${tag#v}
      - run: export tagmajorversion=${tagversion%.*.*}

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --if-present

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USER || secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Publish Docker container
        run: |
          docker buildx build . \
            -t clairelizbet/discord-sudo:latest \
            -t "clairelizbet/discord-sudo:${tagversion}" \
            -t "clairelizbet/discord-sudo:${tagmajorversion}" \
            --push

      - run: touch "${ghdir}/release.md"
      - run: mkdir -p dist
      - run: touch "${ghdir}/dist/title.txt"
      - run: cp "${ghdir}/release.md" "${ghdir}/dist/"
      - name: Create release
        run: npm run build:release --if-present

      - run: export defaultTitle="v${tagVersion} Update"
      - run: export titleFromFile=$(< "${ghdir}/dist/title.txt")
      - run: export releaseTitle=${titleFromFile:-${defaultTitle}}
      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${tag}" \
            --repo "${GITHUB_REPOSITORY}" \
            --title "${releaseTitle}" \
            --notes-file "${ghdir}/dist/release.md"
